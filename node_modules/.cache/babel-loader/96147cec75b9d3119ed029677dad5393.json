{"ast":null,"code":"var _jsxFileName = \"/Users/agu/fe3-final/src/Components/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useMemo, useReducer } from 'react'; // Define el estado inicial\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: 'light',\n  data: [],\n  favs: []\n}; // Agregamos el estado de los favoritos\n// Crea el contexto\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // Corregido el nombre del contexto\n// Define el reducer para gestionar el estado global\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      return { ...state,\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      };\n\n    case 'SET_DATA':\n      return { ...state,\n        data: action.payload\n      };\n\n    case 'ADD_FAV':\n      return { ...state,\n        favs: [...state.favs, action.payload]\n      };\n\n    case 'REMOVE_FAV':\n      return { ...state,\n        favs: state.favs.filter(dentist => dentist.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}; // Crea el proveedor de contexto\n\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // Aplica useMemo para evitar renderizados innecesarios del proveedor\n  const [state, dispatch] = useReducer(reducer, initialState); // Define las acciones para cambiar el estado global\n\n  const toggleTheme = () => {\n    dispatch({\n      type: 'TOGGLE_THEME'\n    });\n  };\n\n  const setData = data => {\n    dispatch({\n      type: 'SET_DATA',\n      payload: data\n    });\n  };\n\n  const addFav = dentist => {\n    dispatch({\n      type: 'ADD_FAV',\n      payload: dentist\n    });\n  };\n\n  const removeFav = dentistId => {\n    dispatch({\n      type: 'REMOVE_FAV',\n      payload: dentistId\n    });\n  }; // Utiliza useMemo para evitar que el valor del contexto se actualice innecesariamente\n\n\n  const contextValue = useMemo(() => {\n    return {\n      state,\n      toggleTheme,\n      setData,\n      addFav,\n      removeFav\n    };\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"KLvQelNBs/Ld5E3aV0blL/044PQ=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useMemo","useReducer","initialState","theme","data","favs","GlobalContext","reducer","state","action","type","payload","filter","dentist","id","ContextProvider","children","dispatch","toggleTheme","setData","addFav","removeFav","dentistId","contextValue"],"sources":["/Users/agu/fe3-final/src/Components/global.context.jsx"],"sourcesContent":["import React, { createContext, useMemo, useReducer } from 'react';\n\n// Define el estado inicial\nexport const initialState = { theme: 'light', data: [], favs: [] }; // Agregamos el estado de los favoritos\n\n// Crea el contexto\nexport const GlobalContext = createContext(initialState); // Corregido el nombre del contexto\n\n// Define el reducer para gestionar el estado global\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      return { ...state, theme: state.theme === 'light' ? 'dark' : 'light' };\n    case 'SET_DATA':\n      return { ...state, data: action.payload };\n    case 'ADD_FAV':\n      return { ...state, favs: [...state.favs, action.payload] };\n    case 'REMOVE_FAV':\n      return { ...state, favs: state.favs.filter((dentist) => dentist.id !== action.payload) };\n    default:\n      return state;\n  }\n};\n\n// Crea el proveedor de contexto\nexport const ContextProvider = ({ children }) => {\n  // Aplica useMemo para evitar renderizados innecesarios del proveedor\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // Define las acciones para cambiar el estado global\n  const toggleTheme = () => {\n    dispatch({ type: 'TOGGLE_THEME' });\n  };\n\n  const setData = (data) => {\n    dispatch({ type: 'SET_DATA', payload: data });\n  };\n\n  const addFav = (dentist) => {\n    dispatch({ type: 'ADD_FAV', payload: dentist });\n  };\n\n  const removeFav = (dentistId) => {\n    dispatch({ type: 'REMOVE_FAV', payload: dentistId });\n  };\n\n  // Utiliza useMemo para evitar que el valor del contexto se actualice innecesariamente\n  const contextValue = useMemo(() => {\n    return { state, toggleTheme, setData, addFav, removeFav };\n  }, [state]);\n\n  return (\n    <GlobalContext.Provider value={contextValue}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,OAA/B,EAAwCC,UAAxC,QAA0D,OAA1D,C,CAEA;;;AACA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,IAAI,EAAE,EAAxB;EAA4BC,IAAI,EAAE;AAAlC,CAArB,C,CAA6D;AAEpE;;AACA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACG,YAAD,CAAnC,C,CAAmD;AAE1D;;AACA,MAAMK,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYL,KAAK,EAAEK,KAAK,CAACL,KAAN,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC;MAAtD,CAAP;;IACF,KAAK,UAAL;MACE,OAAO,EAAE,GAAGK,KAAL;QAAYJ,IAAI,EAAEK,MAAM,CAACE;MAAzB,CAAP;;IACF,KAAK,SAAL;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYH,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACE,OAAvB;MAAlB,CAAP;;IACF,KAAK,YAAL;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYH,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWO,MAAX,CAAmBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAArD;MAAlB,CAAP;;IACF;MACE,OAAOH,KAAP;EAVJ;AAYD,CAbD,C,CAeA;;;AACA,OAAO,MAAMO,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA,MAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBhB,UAAU,CAACM,OAAD,EAAUL,YAAV,CAApC,CAF+C,CAI/C;;EACA,MAAMgB,WAAW,GAAG,MAAM;IACxBD,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMS,OAAO,GAAIf,IAAD,IAAU;IACxBa,QAAQ,CAAC;MAAEP,IAAI,EAAE,UAAR;MAAoBC,OAAO,EAAEP;IAA7B,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMgB,MAAM,GAAIP,OAAD,IAAa;IAC1BI,QAAQ,CAAC;MAAEP,IAAI,EAAE,SAAR;MAAmBC,OAAO,EAAEE;IAA5B,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMQ,SAAS,GAAIC,SAAD,IAAe;IAC/BL,QAAQ,CAAC;MAAEP,IAAI,EAAE,YAAR;MAAsBC,OAAO,EAAEW;IAA/B,CAAD,CAAR;EACD,CAFD,CAjB+C,CAqB/C;;;EACA,MAAMC,YAAY,GAAGvB,OAAO,CAAC,MAAM;IACjC,OAAO;MAAEQ,KAAF;MAASU,WAAT;MAAsBC,OAAtB;MAA+BC,MAA/B;MAAuCC;IAAvC,CAAP;EACD,CAF2B,EAEzB,CAACb,KAAD,CAFyB,CAA5B;EAIA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEe,YAA/B;IAAA,UACGP;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA/BM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}