{"ast":null,"code":"var _jsxFileName = \"/Users/agu/fe3-final/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer, useState } from \"react\"; // Crear un contexto global\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext(); // Definir temas disponibles\n\nconst themes = {\n  dark: {\n    isDark: true\n  },\n  light: {\n    isDark: false\n  }\n}; // Estado inicial del tema\n\nconst initialTheme = themes.light; // Estado inicial de favoritos\n\nconst initialFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || []; // Estado inicial de la API\n\nconst initialApiState = {\n  dentistList: [],\n  dentistDetail: {}\n}; // Reductor para el tema\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"SWITCH_DARK\":\n      return themes.dark;\n\n    case \"SWITCH_LIGHT\":\n      return themes.light;\n\n    default:\n      throw new Error(\"Acción no reconocida en el reductor del tema.\");\n  }\n}; // Reductor para favoritos\n\n\nconst favoritesReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_FAVORITE\":\n      return [...state, action.payload];\n\n    default:\n      throw new Error(\"Acción no reconocida en el reductor de favoritos.\");\n  }\n}; // Reductor para la API\n\n\nconst apiReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_DENTISTS\":\n      return {\n        dentistList: action.payload,\n        dentistDetail: state.dentistDetail\n      };\n\n    case \"GET_DENTIST\":\n      return {\n        dentistDetail: action.payload,\n        dentistList: state.dentistList\n      };\n\n    default:\n      throw new Error(\"Acción no reconocida en el reductor de la API.\");\n  }\n}; // Proveedor de contexto\n\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [details, setDetails] = useState();\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState);\n  const [favoritesState, favoritesDispatch] = useReducer(favoritesReducer, initialFavorites);\n  const [themeState, themeDispatch] = useReducer(themeReducer, initialTheme);\n  const url = \"https://jsonplaceholder.typicode.com/users\";\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favoritesState));\n  }, [favoritesState]);\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => setDetails(data));\n  }, []);\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => apiDispatch({\n      type: \"GET_DENTISTS\",\n      payload: data\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      apiState,\n      apiDispatch,\n      favoritesState,\n      favoritesDispatch,\n      themeState,\n      themeDispatch,\n      details,\n      setDetails\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"rEokgNTpTozbfsuIzH2WLvn7Mfg=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useDentistStates = () => {\n  _s2();\n\n  return useContext(GlobalContext);\n};\n\n_s2(useDentistStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useReducer","useState","GlobalContext","themes","dark","isDark","light","initialTheme","initialFavorites","JSON","parse","localStorage","getItem","initialApiState","dentistList","dentistDetail","themeReducer","state","action","type","Error","favoritesReducer","payload","apiReducer","ContextProvider","children","details","setDetails","apiState","apiDispatch","favoritesState","favoritesDispatch","themeState","themeDispatch","url","setItem","stringify","fetch","then","res","json","data","useDentistStates"],"sources":["/Users/agu/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\n\n// Crear un contexto global\nconst GlobalContext = createContext();\n\n// Definir temas disponibles\nconst themes = {\n  dark: {\n    isDark: true,\n  },\n  light: {\n    isDark: false,\n  },\n};\n\n// Estado inicial del tema\nconst initialTheme = themes.light;\n\n// Estado inicial de favoritos\nconst initialFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n\n// Estado inicial de la API\nconst initialApiState = { dentistList: [], dentistDetail: {} };\n\n// Reductor para el tema\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"SWITCH_DARK\":\n      return themes.dark;\n    case \"SWITCH_LIGHT\":\n      return themes.light;\n    default:\n      throw new Error(\"Acción no reconocida en el reductor del tema.\");\n  }\n};\n\n// Reductor para favoritos\nconst favoritesReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_FAVORITE\":\n      return [...state, action.payload];\n    default:\n      throw new Error(\"Acción no reconocida en el reductor de favoritos.\");\n  }\n};\n\n// Reductor para la API\nconst apiReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_DENTISTS\":\n      return {\n        dentistList: action.payload,\n        dentistDetail: state.dentistDetail,\n      };\n    case \"GET_DENTIST\":\n      return { dentistDetail: action.payload, dentistList: state.dentistList };\n    default:\n      throw new Error(\"Acción no reconocida en el reductor de la API.\");\n  }\n};\n\n// Proveedor de contexto\nconst ContextProvider = ({ children }) => {\n  const [details, setDetails] = useState();\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState);\n  const [favoritesState, favoritesDispatch] = useReducer(\n    favoritesReducer,\n    initialFavorites\n  );\n  const [themeState, themeDispatch] = useReducer(themeReducer, initialTheme);\n  const url = \"https://jsonplaceholder.typicode.com/users\";\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favoritesState));\n  }, [favoritesState]);\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setDetails(data));\n  }, []);\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => apiDispatch({ type: \"GET_DENTISTS\", payload: data }));\n  }, []);\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        apiState,\n        apiDispatch,\n        favoritesState,\n        favoritesDispatch,\n        themeState,\n        themeDispatch,\n        details,\n        setDetails,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default ContextProvider;\n\nexport const useDentistStates = () => useContext(GlobalContext);\n"],"mappings":";;;;AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,OANP,C,CAQA;;;AACA,MAAMC,aAAa,gBAAGL,aAAa,EAAnC,C,CAEA;;AACA,MAAMM,MAAM,GAAG;EACbC,IAAI,EAAE;IACJC,MAAM,EAAE;EADJ,CADO;EAIbC,KAAK,EAAE;IACLD,MAAM,EAAE;EADH;AAJM,CAAf,C,CASA;;AACA,MAAME,YAAY,GAAGJ,MAAM,CAACG,KAA5B,C,CAEA;;AACA,MAAME,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD,EAA1E,C,CAEA;;AACA,MAAMC,eAAe,GAAG;EAAEC,WAAW,EAAE,EAAf;EAAmBC,aAAa,EAAE;AAAlC,CAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,aAAL;MACE,OAAOhB,MAAM,CAACC,IAAd;;IACF,KAAK,cAAL;MACE,OAAOD,MAAM,CAACG,KAAd;;IACF;MACE,MAAM,IAAIc,KAAJ,CAAU,+CAAV,CAAN;EANJ;AAQD,CATD,C,CAWA;;;AACA,MAAMC,gBAAgB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;EAC1C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,OAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAP;;IACF;MACE,MAAM,IAAIF,KAAJ,CAAU,mDAAV,CAAN;EAJJ;AAMD,CAPD,C,CASA;;;AACA,MAAMG,UAAU,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,OAAO;QACLL,WAAW,EAAEI,MAAM,CAACI,OADf;QAELP,aAAa,EAAEE,KAAK,CAACF;MAFhB,CAAP;;IAIF,KAAK,aAAL;MACE,OAAO;QAAEA,aAAa,EAAEG,MAAM,CAACI,OAAxB;QAAiCR,WAAW,EAAEG,KAAK,CAACH;MAApD,CAAP;;IACF;MACE,MAAM,IAAIM,KAAJ,CAAU,gDAAV,CAAN;EATJ;AAWD,CAZD,C,CAcA;;;AACA,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACxC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,EAAtC;EACA,MAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B7B,UAAU,CAACuB,UAAD,EAAaV,eAAb,CAA1C;EACA,MAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsC/B,UAAU,CACpDqB,gBADoD,EAEpDb,gBAFoD,CAAtD;EAIA,MAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BjC,UAAU,CAACgB,YAAD,EAAeT,YAAf,CAA9C;EACA,MAAM2B,GAAG,GAAG,4CAAZ;EAEAnC,SAAS,CAAC,MAAM;IACdY,YAAY,CAACwB,OAAb,CAAqB,WAArB,EAAkC1B,IAAI,CAAC2B,SAAL,CAAeN,cAAf,CAAlC;EACD,CAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;EAIA/B,SAAS,CAAC,MAAM;IACdsC,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUd,UAAU,CAACc,IAAD,CAF5B;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA1C,SAAS,CAAC,MAAM;IACdsC,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUZ,WAAW,CAAC;MAAEV,IAAI,EAAE,cAAR;MAAwBG,OAAO,EAAEmB;IAAjC,CAAD,CAF7B;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLb,QADK;MAELC,WAFK;MAGLC,cAHK;MAILC,iBAJK;MAKLC,UALK;MAMLC,aANK;MAOLP,OAPK;MAQLC;IARK,CADT;IAAA,UAYGF;EAZH;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA1CD;;GAAMD,e;;KAAAA,e;AA4CN,eAAeA,eAAf;AAEA,OAAO,MAAMkB,gBAAgB,GAAG;EAAA;;EAAA,OAAM5C,UAAU,CAACI,aAAD,CAAhB;AAAA,CAAzB;;IAAMwC,gB"},"metadata":{},"sourceType":"module"}